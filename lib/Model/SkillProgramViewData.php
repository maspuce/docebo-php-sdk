<?php
/**
 * SkillProgramViewData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * SkillProgramViewData Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SkillProgramViewData implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'SkillProgramViewData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'number_playlists' => 'int',
        'number_users' => 'int',
        'planning_period_id' => 'int',
        'development_program_id' => 'int',
        'link_assets' => 'string',
        'link_users' => 'string',
        'link_plans' => 'string',
        'program_type' => 'string',
        'number_assets' => 'int',
        'description' => 'string',
        'number_channels' => 'int',
        'link_los' => 'string',
        'link_playlists' => 'string',
        'link_roles' => 'string',
        'number_courses' => 'int',
        'link_channels' => 'string',
        'link_courses' => 'string',
        'number_los' => 'int',
        'name' => 'string',
        'number_roles' => 'int',
        'number_plans' => 'int'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'number_playlists' => 'number_playlists',
        'number_users' => 'number_users',
        'planning_period_id' => 'planning_period_id',
        'development_program_id' => 'development_program_id',
        'link_assets' => 'link_assets',
        'link_users' => 'link_users',
        'link_plans' => 'link_plans',
        'program_type' => 'program_type',
        'number_assets' => 'number_assets',
        'description' => 'description',
        'number_channels' => 'number_channels',
        'link_los' => 'link_los',
        'link_playlists' => 'link_playlists',
        'link_roles' => 'link_roles',
        'number_courses' => 'number_courses',
        'link_channels' => 'link_channels',
        'link_courses' => 'link_courses',
        'number_los' => 'number_los',
        'name' => 'Name',
        'number_roles' => 'number_roles',
        'number_plans' => 'number_plans'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'number_playlists' => 'setNumberPlaylists',
        'number_users' => 'setNumberUsers',
        'planning_period_id' => 'setPlanningPeriodId',
        'development_program_id' => 'setDevelopmentProgramId',
        'link_assets' => 'setLinkAssets',
        'link_users' => 'setLinkUsers',
        'link_plans' => 'setLinkPlans',
        'program_type' => 'setProgramType',
        'number_assets' => 'setNumberAssets',
        'description' => 'setDescription',
        'number_channels' => 'setNumberChannels',
        'link_los' => 'setLinkLos',
        'link_playlists' => 'setLinkPlaylists',
        'link_roles' => 'setLinkRoles',
        'number_courses' => 'setNumberCourses',
        'link_channels' => 'setLinkChannels',
        'link_courses' => 'setLinkCourses',
        'number_los' => 'setNumberLos',
        'name' => 'setName',
        'number_roles' => 'setNumberRoles',
        'number_plans' => 'setNumberPlans'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'number_playlists' => 'getNumberPlaylists',
        'number_users' => 'getNumberUsers',
        'planning_period_id' => 'getPlanningPeriodId',
        'development_program_id' => 'getDevelopmentProgramId',
        'link_assets' => 'getLinkAssets',
        'link_users' => 'getLinkUsers',
        'link_plans' => 'getLinkPlans',
        'program_type' => 'getProgramType',
        'number_assets' => 'getNumberAssets',
        'description' => 'getDescription',
        'number_channels' => 'getNumberChannels',
        'link_los' => 'getLinkLos',
        'link_playlists' => 'getLinkPlaylists',
        'link_roles' => 'getLinkRoles',
        'number_courses' => 'getNumberCourses',
        'link_channels' => 'getLinkChannels',
        'link_courses' => 'getLinkCourses',
        'number_los' => 'getNumberLos',
        'name' => 'getName',
        'number_roles' => 'getNumberRoles',
        'number_plans' => 'getNumberPlans'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['number_playlists'] = isset($data['number_playlists']) ? $data['number_playlists'] : null;
        $this->container['number_users'] = isset($data['number_users']) ? $data['number_users'] : null;
        $this->container['planning_period_id'] = isset($data['planning_period_id']) ? $data['planning_period_id'] : null;
        $this->container['development_program_id'] = isset($data['development_program_id']) ? $data['development_program_id'] : null;
        $this->container['link_assets'] = isset($data['link_assets']) ? $data['link_assets'] : null;
        $this->container['link_users'] = isset($data['link_users']) ? $data['link_users'] : null;
        $this->container['link_plans'] = isset($data['link_plans']) ? $data['link_plans'] : null;
        $this->container['program_type'] = isset($data['program_type']) ? $data['program_type'] : null;
        $this->container['number_assets'] = isset($data['number_assets']) ? $data['number_assets'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['number_channels'] = isset($data['number_channels']) ? $data['number_channels'] : null;
        $this->container['link_los'] = isset($data['link_los']) ? $data['link_los'] : null;
        $this->container['link_playlists'] = isset($data['link_playlists']) ? $data['link_playlists'] : null;
        $this->container['link_roles'] = isset($data['link_roles']) ? $data['link_roles'] : null;
        $this->container['number_courses'] = isset($data['number_courses']) ? $data['number_courses'] : null;
        $this->container['link_channels'] = isset($data['link_channels']) ? $data['link_channels'] : null;
        $this->container['link_courses'] = isset($data['link_courses']) ? $data['link_courses'] : null;
        $this->container['number_los'] = isset($data['number_los']) ? $data['number_los'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['number_roles'] = isset($data['number_roles']) ? $data['number_roles'] : null;
        $this->container['number_plans'] = isset($data['number_plans']) ? $data['number_plans'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['number_playlists'] === null) {
            $invalid_properties[] = "'number_playlists' can't be null";
        }
        if ($this->container['number_users'] === null) {
            $invalid_properties[] = "'number_users' can't be null";
        }
        if ($this->container['planning_period_id'] === null) {
            $invalid_properties[] = "'planning_period_id' can't be null";
        }
        if ($this->container['development_program_id'] === null) {
            $invalid_properties[] = "'development_program_id' can't be null";
        }
        if ($this->container['link_assets'] === null) {
            $invalid_properties[] = "'link_assets' can't be null";
        }
        if ($this->container['link_users'] === null) {
            $invalid_properties[] = "'link_users' can't be null";
        }
        if ($this->container['link_plans'] === null) {
            $invalid_properties[] = "'link_plans' can't be null";
        }
        if ($this->container['program_type'] === null) {
            $invalid_properties[] = "'program_type' can't be null";
        }
        if ($this->container['number_assets'] === null) {
            $invalid_properties[] = "'number_assets' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalid_properties[] = "'description' can't be null";
        }
        if ($this->container['number_channels'] === null) {
            $invalid_properties[] = "'number_channels' can't be null";
        }
        if ($this->container['link_los'] === null) {
            $invalid_properties[] = "'link_los' can't be null";
        }
        if ($this->container['link_playlists'] === null) {
            $invalid_properties[] = "'link_playlists' can't be null";
        }
        if ($this->container['link_roles'] === null) {
            $invalid_properties[] = "'link_roles' can't be null";
        }
        if ($this->container['number_courses'] === null) {
            $invalid_properties[] = "'number_courses' can't be null";
        }
        if ($this->container['link_channels'] === null) {
            $invalid_properties[] = "'link_channels' can't be null";
        }
        if ($this->container['link_courses'] === null) {
            $invalid_properties[] = "'link_courses' can't be null";
        }
        if ($this->container['number_los'] === null) {
            $invalid_properties[] = "'number_los' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalid_properties[] = "'name' can't be null";
        }
        if ($this->container['number_roles'] === null) {
            $invalid_properties[] = "'number_roles' can't be null";
        }
        if ($this->container['number_plans'] === null) {
            $invalid_properties[] = "'number_plans' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['number_playlists'] === null) {
            return false;
        }
        if ($this->container['number_users'] === null) {
            return false;
        }
        if ($this->container['planning_period_id'] === null) {
            return false;
        }
        if ($this->container['development_program_id'] === null) {
            return false;
        }
        if ($this->container['link_assets'] === null) {
            return false;
        }
        if ($this->container['link_users'] === null) {
            return false;
        }
        if ($this->container['link_plans'] === null) {
            return false;
        }
        if ($this->container['program_type'] === null) {
            return false;
        }
        if ($this->container['number_assets'] === null) {
            return false;
        }
        if ($this->container['description'] === null) {
            return false;
        }
        if ($this->container['number_channels'] === null) {
            return false;
        }
        if ($this->container['link_los'] === null) {
            return false;
        }
        if ($this->container['link_playlists'] === null) {
            return false;
        }
        if ($this->container['link_roles'] === null) {
            return false;
        }
        if ($this->container['number_courses'] === null) {
            return false;
        }
        if ($this->container['link_channels'] === null) {
            return false;
        }
        if ($this->container['link_courses'] === null) {
            return false;
        }
        if ($this->container['number_los'] === null) {
            return false;
        }
        if ($this->container['name'] === null) {
            return false;
        }
        if ($this->container['number_roles'] === null) {
            return false;
        }
        if ($this->container['number_plans'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets number_playlists
     * @return int
     */
    public function getNumberPlaylists()
    {
        return $this->container['number_playlists'];
    }

    /**
     * Sets number_playlists
     * @param int $number_playlists number of playlists assigned with this development program
     * @return $this
     */
    public function setNumberPlaylists($number_playlists)
    {
        $this->container['number_playlists'] = $number_playlists;

        return $this;
    }

    /**
     * Gets number_users
     * @return int
     */
    public function getNumberUsers()
    {
        return $this->container['number_users'];
    }

    /**
     * Sets number_users
     * @param int $number_users number of users assigned with this development program
     * @return $this
     */
    public function setNumberUsers($number_users)
    {
        $this->container['number_users'] = $number_users;

        return $this;
    }

    /**
     * Gets planning_period_id
     * @return int
     */
    public function getPlanningPeriodId()
    {
        return $this->container['planning_period_id'];
    }

    /**
     * Sets planning_period_id
     * @param int $planning_period_id id of the planning period assigned (if any)
     * @return $this
     */
    public function setPlanningPeriodId($planning_period_id)
    {
        $this->container['planning_period_id'] = $planning_period_id;

        return $this;
    }

    /**
     * Gets development_program_id
     * @return int
     */
    public function getDevelopmentProgramId()
    {
        return $this->container['development_program_id'];
    }

    /**
     * Sets development_program_id
     * @param int $development_program_id Development program ID
     * @return $this
     */
    public function setDevelopmentProgramId($development_program_id)
    {
        $this->container['development_program_id'] = $development_program_id;

        return $this;
    }

    /**
     * Gets link_assets
     * @return string
     */
    public function getLinkAssets()
    {
        return $this->container['link_assets'];
    }

    /**
     * Sets link_assets
     * @param string $link_assets Hateohas link that provide the list of assets assigned to the development program
     * @return $this
     */
    public function setLinkAssets($link_assets)
    {
        $this->container['link_assets'] = $link_assets;

        return $this;
    }

    /**
     * Gets link_users
     * @return string
     */
    public function getLinkUsers()
    {
        return $this->container['link_users'];
    }

    /**
     * Sets link_users
     * @param string $link_users Hateohas link that provide the list of users assigned to the development program
     * @return $this
     */
    public function setLinkUsers($link_users)
    {
        $this->container['link_users'] = $link_users;

        return $this;
    }

    /**
     * Gets link_plans
     * @return string
     */
    public function getLinkPlans()
    {
        return $this->container['link_plans'];
    }

    /**
     * Sets link_plans
     * @param string $link_plans Hateohas link that provide the list of users assigned to the development program
     * @return $this
     */
    public function setLinkPlans($link_plans)
    {
        $this->container['link_plans'] = $link_plans;

        return $this;
    }

    /**
     * Gets program_type
     * @return string
     */
    public function getProgramType()
    {
        return $this->container['program_type'];
    }

    /**
     * Sets program_type
     * @param string $program_type The development program type O=Onboarding, D=Development
     * @return $this
     */
    public function setProgramType($program_type)
    {
        $this->container['program_type'] = $program_type;

        return $this;
    }

    /**
     * Gets number_assets
     * @return int
     */
    public function getNumberAssets()
    {
        return $this->container['number_assets'];
    }

    /**
     * Sets number_assets
     * @param int $number_assets number of assets assigned with this development program
     * @return $this
     */
    public function setNumberAssets($number_assets)
    {
        $this->container['number_assets'] = $number_assets;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description Development program description in the selected language
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets number_channels
     * @return int
     */
    public function getNumberChannels()
    {
        return $this->container['number_channels'];
    }

    /**
     * Sets number_channels
     * @param int $number_channels number of channels assigned with this development program
     * @return $this
     */
    public function setNumberChannels($number_channels)
    {
        $this->container['number_channels'] = $number_channels;

        return $this;
    }

    /**
     * Gets link_los
     * @return string
     */
    public function getLinkLos()
    {
        return $this->container['link_los'];
    }

    /**
     * Sets link_los
     * @param string $link_los Hateohas link that provide the list of learning objects assigned to the development program
     * @return $this
     */
    public function setLinkLos($link_los)
    {
        $this->container['link_los'] = $link_los;

        return $this;
    }

    /**
     * Gets link_playlists
     * @return string
     */
    public function getLinkPlaylists()
    {
        return $this->container['link_playlists'];
    }

    /**
     * Sets link_playlists
     * @param string $link_playlists Hateohas link that provide the list of playlists assigned to the development program
     * @return $this
     */
    public function setLinkPlaylists($link_playlists)
    {
        $this->container['link_playlists'] = $link_playlists;

        return $this;
    }

    /**
     * Gets link_roles
     * @return string
     */
    public function getLinkRoles()
    {
        return $this->container['link_roles'];
    }

    /**
     * Sets link_roles
     * @param string $link_roles Hateohas link that provide the list of roles assigned to the development program
     * @return $this
     */
    public function setLinkRoles($link_roles)
    {
        $this->container['link_roles'] = $link_roles;

        return $this;
    }

    /**
     * Gets number_courses
     * @return int
     */
    public function getNumberCourses()
    {
        return $this->container['number_courses'];
    }

    /**
     * Sets number_courses
     * @param int $number_courses number of courses assigned with this development program
     * @return $this
     */
    public function setNumberCourses($number_courses)
    {
        $this->container['number_courses'] = $number_courses;

        return $this;
    }

    /**
     * Gets link_channels
     * @return string
     */
    public function getLinkChannels()
    {
        return $this->container['link_channels'];
    }

    /**
     * Sets link_channels
     * @param string $link_channels Hateohas link that provide the list of channels assigned to the development program
     * @return $this
     */
    public function setLinkChannels($link_channels)
    {
        $this->container['link_channels'] = $link_channels;

        return $this;
    }

    /**
     * Gets link_courses
     * @return string
     */
    public function getLinkCourses()
    {
        return $this->container['link_courses'];
    }

    /**
     * Sets link_courses
     * @param string $link_courses Hateohas link that provide the list of courses assigned to the development program
     * @return $this
     */
    public function setLinkCourses($link_courses)
    {
        $this->container['link_courses'] = $link_courses;

        return $this;
    }

    /**
     * Gets number_los
     * @return int
     */
    public function getNumberLos()
    {
        return $this->container['number_los'];
    }

    /**
     * Sets number_los
     * @param int $number_los number of learning objects assigned with this development program
     * @return $this
     */
    public function setNumberLos($number_los)
    {
        $this->container['number_los'] = $number_los;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name The name of the development program in the selected language
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets number_roles
     * @return int
     */
    public function getNumberRoles()
    {
        return $this->container['number_roles'];
    }

    /**
     * Sets number_roles
     * @param int $number_roles number of roles with this development program assigned
     * @return $this
     */
    public function setNumberRoles($number_roles)
    {
        $this->container['number_roles'] = $number_roles;

        return $this;
    }

    /**
     * Gets number_plans
     * @return int
     */
    public function getNumberPlans()
    {
        return $this->container['number_plans'];
    }

    /**
     * Sets number_plans
     * @param int $number_plans number of learning plans assigned with this development program
     * @return $this
     */
    public function setNumberPlans($number_plans)
    {
        $this->container['number_plans'] = $number_plans;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


